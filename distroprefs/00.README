=head1 NAME

  DistroPrefs -- Preferences/Distributions/CPAN

=head1 DESCRIPTION

The files in this directory are YAML files that specify how CPAN.pm
shall treat distributions that you want or need to treat differently
from the normal mantra of

    perl Makefile.PL
    make
    make test
    make install

Some modules try to get some data from the user interactively thus
disturbing the installation of large bundles like Phalanx100 or
modules like Plagger.

CPAN.pm can use these YAML files to either

=over

=item

pass additional arguments to one of the four commands,

=item

set environment variables

=item

instantiate an Expect object that reads from the console, waits for
some regular expression and enters some answers

=item

temporarily override assorted CPAN.pm configuration variables
(supported are: build_requires_install_policy, make,
make_install_make_command, prefer_installer, test_report)

=item

disable the installation of an object altogether

=back

See the YAML files that come with the CPAN.pm distribution in the
C<distroprefs/> directory for examples.

=head1 EXAMPLE FILES

CPAN.pm comes with a collection of example YAML files. Note that these
are really just examples and should not be used without care because
they cannot fit everybody's purpose. After all the authors of the
packages that ask questions had a need to ask, so you should watch
their questions and adjust the examples to your environment and your
needs. You have beend warned:-)

=head1 FILENAMES

The YAML files themselves must have the .yml extension, all other
files are ignored. The containing directory can be specified in
CPAN.pm in the prefs_dir config variable. Try 'o conf init /prefs/' in
the CPAN shell.

The names of the files can be picked freely, CPAN.pm always reads all
files (in alphabetical order) and takes the key "match" as a hashref
containing one or more of the keys C<distribution>, C<modules>, or
C<perl>. The corresponding values are interpreted as regular
expressions. The C<distribution> related one will be matched against
the canonical distribution name, e.g. "AUTHOR/Foo-Bar-3.14.tar.gz".
The C<module> related one will be matched against all modules
contained in the distribution until one module matches and the C<perl>
related one will be matched against C<$^X>. If more than one
restriction of C<module>, C<distribution>, and C<perl> is specified,
the results of the separately computed match values are ANDed. If the
final result is true, then the hashref represented by the YAML file is
returned as the preference structure for the current distribution.

=head1 MAINTAINANCE

Authors are changing their packages and introduce new dialogs, change
the wording, change the order of questions, remove questions,
introduce new options, update their autoinstaller etc. So you have to
adjust your prefs from time to time. While CPAN.pm will probably
contain some newer prefs files with every release, it will never be a
reliable data source for a large amount of prefs file and more
importantly will not always match your requirements.

So if you decide to use distroprefs do not expect that you can have
them without some maintainance overhead.

=head1 TRICKS

=head2 Repetitions

Distros using older versions of Module::AutoInstall often do not
support the --defaultdeps argument. So you probably have to use

  pl:
    expect:
      - "Auto-install"
      - "y\n"

When you watch them you probably notice that they ask one question.
Don't rely on that number. Next time you install that module it may
ask 2 or more questions: because it calculates the number of questions
from what you have installed at the moment. So better be prepared for
more questions and repeat the above pattern once or twice.

Don't hesitate to report this as a bug to the module author that is
using Module::AutoInstall. They have to update the copy of
Module::AutoInstall that comes with their package. It will not be
sufficient that you update Module::AutoInstall.

=head2 Exceptions

You have a Bundle to install and notice that the Bundle has one module
that you do NOT want for some reason? Add something like

  make: 
    args:
      - nosuchtarget

and you force this target to fail quickly.

=head2 Fun (not!)

Module::AutoInstall often doesn't get it right to find out under which
circumstances it was invoked. Setting the environment variable
PERL5_CPANPLUS_IS_RUNNING to 1 or setting PERL_AUTOINSTALL to --skip
seems to help. Best to try both. I do not understand what's up there.
If you know, please fix. If you don't, maybe try what I'm doing in
MIYAGAWA.Plagger.yml.

=head1 PATCHES

My procedure when I encounter a broken package:

    look DISTRO
    cd ..
    rsync -va DISTRODIR/ DISTRODIR.orig/
    # fix the distro in DISTRODIR
    diff -urp DISTRODIR.orig DISTRODIR > DISTRODIR-ANDK-01.patch
    gzip DISTRODIR-ANDK-01.patch

I then upload the resulting patch to my CPAN patches/ directory and
write a YAML file into my prefs_dir/ directory that contains roughly

    --- 
    comment: "This patch fixes ..."
    match:
      distribution: "^DISTRO$"

    patches:
      - ANDK/patches/DISTRODIR-ANDK-01.patch

That's all. From then I can install that distro for any perl version
on that machine.

=head1 BLUEPRINT

The following example contains all supported keywords and structures:

  --- 
  comment: "Demo"
  match:
    module: "Dancing::Queen"
    distribution: "^CHACHACHA/Dancing-"
    perl: "/usr/local/cariba-perl/bin/perl"
  disabled: 1
  cpanconfig:
    make: gmake
  pl: 
    args:
      - "--somearg=specialcase"

    env: {}

    expect:
      - "Which is your favorite fruit"
      - "apple\n"

  make: 
    args:
      - all
      - extra-all

    env: {}

    expect: []

  test: 
    args: []

    env: {}

    expect: []

  install: 
    args: []

    env:
      WANT_TO_INSTALL: YES

    expect:
      - "Do you really want to install"
      - "y\n"

  patches:
    - "ABCDE/Fedcba-3.14-ABCDE-01.patch"


=head1 FEEDBACK

Please report interesting improvements you apply to these files. Any
additions and corrections are welcome. Also, please be aware that
there are many areas of this system that need further attention and
are not yet working as one would expect or hope.

Please use the
http://rt.cpan.org/Dist/Display.html?Status=Active&Queue=CPAN address
to report any bugs and wished. Thank you!

Enjoy,
-- 
andreas
